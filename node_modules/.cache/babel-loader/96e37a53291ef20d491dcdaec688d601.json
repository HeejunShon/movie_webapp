{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shon\\\\Desktop\\\\projects\\\\movie_app\\\\src\\\\App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios'; // import Movie from './Movie';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n      // console.log(movies.data.data.movies);\n      //es6 =>\n      const _ref = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    //state 가져오기\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          movies = _this$state.movies;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, isLoading ? \"Loading..\" : movies.map(movie => {\n      return React.createElement(Movie, {\n        id: movie.id,\n        year: movie.year,\n        title: movie.title,\n        summary: movie.summary,\n        poster: movie.medium_cover_image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Shon/Desktop/projects/movie_app/src/App.js"],"names":["React","PropTypes","axios","App","Component","state","isLoading","movies","getMovies","get","data","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAO/BC,SAP+B,GAOnB,YAAY;AACtB;AACA;AACA;AAHsB,mBAQlB,MAAMN,KAAK,CAACO,GAAN,CACR,0DADQ,CARY;AAAA,YAMXF,MANW,QAKpBG,IALoB,CAMlBA,IANkB,CAMXH,MANW;;AAYtB,WAAKI,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAE;AAApB,OAAd;AACD,KApB8B;AAAA;;AAsB/BM,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,SAAL;AACD;;AAEDK,EAAAA,MAAM,GAAE;AACN;AADM,wBAEsB,KAAKR,KAF3B;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYC,MAFZ,eAEYA,MAFZ;AAGN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,GAAG,WAAH,GAAiBC,MAAM,CAACO,GAAP,CAAWC,KAAK,IAAI;AAC7C,aAAO,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEA,KAAK,CAACC,EAAjB;AAAqB,QAAA,IAAI,EAAED,KAAK,CAACE,IAAjC;AAAuC,QAAA,KAAK,EAAEF,KAAK,CAACG,KAApD;AAA2D,QAAA,OAAO,EAAEH,KAAK,CAACI,OAA1E;AAAmF,QAAA,MAAM,EAAEJ,KAAK,CAACK,kBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAF0B,CAD7B,CADF;AAOD;;AApC8B;;AAyCjC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n// import Movie from './Movie';\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  //fetching movie API\n  getMovies = async () => {\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    // console.log(movies.data.data.movies);\n    //es6 =>\n    const {\n      data: {\n        data: {movies}\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n   \n    this.setState({movies, isLoading: false});\n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    //state 가져오기\n    const {isLoading, movies} = this.state;\n    return (\n      <div>\n        {isLoading ? \"Loading..\" : movies.map(movie => {\n          return <Movie id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image}/>\n        })}\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}